/*
 * ToDoList.java
 *
 * Created on May 16, 2008, 5:58 AM
 */


import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;

/**
 *
 * @author  kfryauff
 * 
 */
public class ToDoList extends javax.swing.JFrame {

    private JTable newTable;

    /** Creates new form ToDoList */
    public ToDoList() {
        initComponents();
    }

    private void drawNewTable() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        infoPanel = new javax.swing.JPanel();
        inputPanel = new javax.swing.JPanel();
        taskInputField = new javax.swing.JTextField();
        statusComboBox = new javax.swing.JComboBox();
        priorityComboBox = new javax.swing.JComboBox();
        tableScrollPanel = new javax.swing.JScrollPane();
        toDoTable = new javax.swing.JTable();
        titlePanel = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        removeBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        returnBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        openBtn = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        infoPanel.setBackground(new java.awt.Color(204, 255, 255));
        infoPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 204), 3));

        inputPanel.setBackground(new java.awt.Color(204, 255, 255));

        taskInputField.setText("Input Task Here:");

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Not Started", "In Progress", "Completed", "Deferred" }));

        priorityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Medium Priority", "Emergency!", "High Priority", "Low Priority" }));

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taskInputField, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priorityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(taskInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(priorityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        toDoTable.setAutoCreateRowSorter(true);
        toDoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Task", "Status", "Priority"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableScrollPanel.setViewportView(toDoTable);
        toDoTable.getColumnModel().getColumn(0).setPreferredWidth(250);
        toDoTable.getColumnModel().getColumn(1).setPreferredWidth(60);
        toDoTable.getColumnModel().getColumn(2).setPreferredWidth(60);

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(tableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addContainerGap())
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );

        titlePanel.setBackground(new java.awt.Color(204, 255, 255));
        titlePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 204), 3));

        titleLbl.setBackground(new java.awt.Color(204, 255, 255));
        titleLbl.setFont(new java.awt.Font("Arial", 1, 18));
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("To-Do List");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                .addContainerGap())
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        buttonPanel.setBackground(new java.awt.Color(204, 255, 255));
        buttonPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 204), 3));

        removeBtn.setText("Remove");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        returnBtn.setText("Back To Main");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("SAVE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        openBtn.setText("OPEN");
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });

        printBtn.setText("PRINT PAGE");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(exitBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(returnBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(removeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(printBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(openBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(saveBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(returnBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>                        

private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {                                       
// TODO add your handling code here:
    String input = taskInputField.getText();

    addRemoveRow(1);    //adds an item to tableArray => one row to table

    toDoTable.setEditingRow(toDoTable.getRowCount() + 1);
    toDoTable.setValueAt(input, rowNum, 0);
    tableArray[rowNum][0] = input;
    toDoTable.setValueAt(statusComboBox.getSelectedItem(), rowNum, 1);
    tableArray[rowNum][1] = statusComboBox.getSelectedItem();
    toDoTable.setValueAt(priorityComboBox.getSelectedItem(), rowNum, 2);
    tableArray[rowNum][2] = priorityComboBox.getSelectedItem();

    rowNum++;
}                                      

private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
// TODO add your handling code here:
       int[] toRemove = toDoTable.getSelectedRows(); //obtains rows to remove

    int numDef = 0;
    //removes selected rows
    for (int i : toRemove) {
        i = i - numDef;
        //shifts data over selected row
        for (int j = i; j < rowNum - 1; j++) {
            for (int k = 0; k <= 2; k++) {
                toDoTable.setValueAt(toDoTable.getValueAt(j + 1, k), j, k);  //replaced a long list of setValue statements                    
                tableArray[j][k] = tableArray[j + 1][k];
            }
        }
        //removes one row
        addRemoveRow(-1);
        rowNum--;
        numDef++;
    }

}                                         

    private void addRemoveRow(int x) {
        //if (rowNum >= toDoTable.getRowCount()) {
            Object[][] newTable = new Object[rowNum + x][3];
            int length = 0;
            if (x < 0) {
                length = newTable.length;
            } else {
                length = tableArray.length;
            }
            for (int i = 0; i < length; i++) {
                for (int j = 0; j < tableArray[0].length; j++) {
                    newTable[i][j] = tableArray[i][j];
                }
            }
            tableArray = newTable;
            toDoTable.setModel(new javax.swing.table.DefaultTableModel(tableArray,
                    new String[]{
                        "Task", "Status", "Priority"
                    }));

        // setRowCount(newTable, inventoryTable.getRowCount());
        //}
    }                                 

private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
// TODO add your handling code here:
    System.exit(0);
}                                       

private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
// TODO add your handling code here:
    this.setVisible(false);
    new mainM().setVisible(true);
}                                         

private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
// TODO add your handling code here:
    //file for inventoryTable / tableArray
    File file = MessageUtil.getPath(toDoTable, MessageUtil.SAVE, MessageUtil.FILES_ONLY);
    if (file == null) {
        return;
    }
    PrintWriter output = null;
    try {
        output = new PrintWriter(file);
    } catch (FileNotFoundException ex) {
        WarningJDialog warning = new WarningJDialog(this, true);
        warning.printMessage("      !!WARNING!! \n FILE NOT FOUND!! \n Program Cannot write to file");
        warning.setVisible(true);
    }

    //print data to file
    for (Object[] itemArray : tableArray) {
        for (Object item : itemArray) {
            output.print(item + "||");
        }
        output.println("--endRow--||");
    }
    output.println("--end--||");
    output.close();

    //ComboBox Saving
    File info = new File("DO_NOT_DELETE.txt");
    PrintWriter out = null;
    try {
        out = new PrintWriter(file);
    } catch (FileNotFoundException ex) {
        WarningJDialog warning = new WarningJDialog(this, true);
        warning.printMessage("      !!WARNING!! \n FILE NOT FOUND!! \n Program Cannot write to file");
        warning.setVisible(true);
        return;
    }
}                                       

private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
// TODO add your handling code here:
    File file = MessageUtil.getPath(toDoTable, MessageUtil.OPEN, MessageUtil.FILES_ONLY);
    if (file == null) {
        return;
    }
    BufferedReader input = null;
    try {
        input = new BufferedReader(new FileReader(file));
    } catch (FileNotFoundException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }

    String line;
    tableArray = new Object[1][9];
    rowNum = 0;
    int lineNum = 0;
    try {
        while ((line = input.readLine()) != null) {
            lineNum++;
            addRemoveRow(1);  //adds one row to tableArray (and to table)

            int start = 0;
            int end = line.indexOf("||", start);

            for (int i = 0; i < tableArray[0].length; i++) {
                String word = line.substring(start, end);
                System.out.println("row: " + rowNum + "  i: " + i + " word: " + word + " \t end: " + end + " tbl length: " + tableArray.length + ", " + tableArray[0].length);
                tableArray[rowNum - 1][i] = word.trim();
                start = end + 2;
                end = line.indexOf("||", start);
            }

        }
        input.close();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    drawNewTable();
}                                       

private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
    // TODO add your handling code here:    
    try {
        toDoTable.print();
    } catch (PrinterException ex) {                                        
        Logger.getLogger(ToDoList.class.getName()).log(Level.SEVERE, null, ex);
    }
}                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ToDoList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton exitBtn;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JButton openBtn;
    private javax.swing.JButton printBtn;
    private javax.swing.JComboBox priorityComboBox;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton returnBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox statusComboBox;
    private javax.swing.JScrollPane tableScrollPanel;
    private javax.swing.JTextField taskInputField;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JPanel titlePanel;
    public static javax.swing.JTable toDoTable;
    // End of variables declaration                   
    private int rowNum = 0;
    private Object[][] tableArray = new Object[][]{{null, null, null}};
    ;
}
